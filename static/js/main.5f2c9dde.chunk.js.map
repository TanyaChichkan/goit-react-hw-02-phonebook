{"version":3,"sources":["components/filter/Filter.module.css","components/contactList/ContactList.module.css","components/contactListItem/ContactListItem.module.css","components/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/contactForm/ContactForm.js","components/contactsTracker/ContactsTracker.js","components/contactsTracker/ContactsTrackHook.js","App.js","index.js","components/contactForm/ContactForm.module.css"],"names":["module","exports","ContactListItem","id","name","number","onRemove","update","onUpdate","updatedClass","styles","updated","textUpdatedClass","buttonUpdatedClass","className","wrapper","itemLabel","type","checked","onChange","inputItem","data-name","onClick","data-type","ContactList","contacts","onRemoveContact","onUpdateContact","list","map","Filter","value","onChangeFilter","htmlFor","FilterInput","ContactForm","state","handleChange","e","target","setState","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","form","label","input","formButton","disabled","Component","uuidv4","require","v4","ContactsTrackerHook","useState","setContacts","filter","setFilter","getVisibleContacts","contact","toLowerCase","includes","item","find","alert","length","console","log","dataset","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f2c9dde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterInput\":\"Filter_FilterInput__miA1f\",\"Filter\":\"Filter_Filter__1zRMR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2cSF4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-not-updated\":\"ContactListItem_text-not-updated__2Zu1m\",\"text-updated\":\"ContactListItem_text-updated__q_q-b\",\"wrapper\":\"ContactListItem_wrapper__xL_UQ\",\"updated\":\"ContactListItem_updated__3uUtO\",\"not-updated\":\"ContactListItem_not-updated__HLZtb\",\"button-not-updated\":\"ContactListItem_button-not-updated__2yMc1\",\"button-updated\":\"ContactListItem_button-updated__16psf\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = function({id,name,number,onRemove,update,onUpdate}){\r\n\r\n  let updatedClass = update ? styles.updated : styles['not-updated'];\r\n  let textUpdatedClass = update ? styles['text-updated'] : styles['text-not-updated'];\r\n  let buttonUpdatedClass= update ? styles['button-updated'] : styles['button-not-updated'];\r\n\r\n  return (\r\n    <li key={id} className = {updatedClass}>\r\n      <span className = {textUpdatedClass}>{name}: {number}</span>\r\n\r\n      <div className = {styles.wrapper}>\r\n        <label id=\"delete\" className = {styles.itemLabel}>update</label>\r\n        <input type=\"checkbox\"\r\n        id = \"delete\"\r\n        checked = {update}\r\n        onChange = {onUpdate}\r\n        className = {styles.inputItem}\r\n        data-name={name}/>\r\n\r\n        <button type=\"button\" onClick={onRemove} data-type={name} className={buttonUpdatedClass}>Delete</button>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n     id:PropTypes.string,\r\n     name: PropTypes.string.isRequired,\r\n     number: PropTypes.string.isRequired,\r\n     update:PropTypes.bool.isRequired,\r\n     onRemove:PropTypes.func.isRequired,\r\n     onUpdate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport ContactListItem from '../contactListItem/ContactListItem';\r\nimport styles from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ContactList = ({contacts,onRemoveContact,onUpdateContact})=>(\r\n  <ul className = {styles.list}>\r\n  {contacts.map(({id,name,number,update})=>(\r\n    <ContactListItem\r\n    key={id}\r\n    name={name}\r\n    number = {number}\r\n    update= {update}\r\n    onRemove={onRemoveContact}\r\n    onUpdate={onUpdateContact}\r\n    />\r\n  ))}\r\n</ul>\r\n)\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n     id:PropTypes.string.isRequired,\r\n     name: PropTypes.string.isRequired,\r\n     number: PropTypes.string.isRequired,\r\n     update:PropTypes.bool.isRequired,\r\n  }),).isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  onUpdateContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\n\r\nexport default function Filter({value, onChangeFilter}){\r\n  return (\r\n    <div className={styles.Filter}>\r\n      <label htmlFor=\"filter\">Find contacts by name</label><br/>\r\n      <input type = \"text\"\r\n      value = {value}\r\n      onChange={onChangeFilter}\r\n      className={styles.FilterInput}\r\n      id=\"filter\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  value:PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired\r\n};","import React, {Component} from 'react';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component{\r\n\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  }\r\n\r\n  handleChange=e=>{\r\n    const {name,value} = e.target;\r\n    this.setState({[name]: value})\r\n  };\r\n\r\n  handleSubmit=e=>{\r\n    const {name,number} = this.state;\r\n    e.preventDefault();\r\n    this.props.onAddContact(name, number);\r\n    this.setState({name: \"\", number:\"\"});\r\n  };\r\n\r\n  render(){\r\n    const {name,number} =this.state;\r\n\r\n\r\n    return(\r\n    <form onSubmit = {this.handleSubmit} className={styles.form}>\r\n\r\n      <label htmlFor=\"text\" className={styles.label}>Name</label><br/>\r\n      <input value={name}\r\n        type=\"text\"\r\n        onChange={this.handleChange}\r\n        id=\"text\"\r\n        name = \"name\"\r\n        className={styles.input}\r\n      />\r\n      <br/>\r\n\r\n      <label htmlFor=\"number\">Number</label><br/>\r\n      <input value={number}\r\n        type=\"tel\"\r\n        onChange={this.handleChange}\r\n        id=\"number\"\r\n        name = \"number\"\r\n        className={styles.input}\r\n\r\n      />\r\n      <br/>\r\n\r\n    <button type=\"submit\" className = {styles.formButton}  disabled={!name, !number}>Add contact</button>\r\n  </form>\r\n    )}\r\n}","import React, { Component } from 'react';\r\n\r\nimport ContactList from '../contactList/ContactList';\r\nimport Filter from '../filter/Filter';\r\nimport ContactForm from '../contactForm/ContactForm';\r\n\r\nconst { v4: uuidv4 } = require('uuid');\r\n\r\nexport default class ContactsTracker extends Component {\r\n\r\n  state = {\r\n    contacts: [\r\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56', update: false},\r\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12',update: false},\r\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79',update: false},\r\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26',update: false},\r\n    ],\r\n    filter:\"\",\r\n  };\r\n\r\n  addContact=(name,number)=>{\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n      update: false\r\n    };\r\n\r\n    const namesArr = this.state.contacts.map(item=>item.name);\r\n\r\n      namesArr.find(name =>name.toLowerCase() === contact.name.toLowerCase()) ?\r\n        alert(`${name} is already in the list`) :\r\n\r\n        this.setState(prevState=>{\r\n          return {\r\n            contacts: [...prevState.contacts, contact]\r\n          };\r\n    });\r\n\r\n  };\r\n\r\n  changeFilter=e=>{\r\n    this.setState({filter:e.target.value})\r\n  };\r\n\r\n  getVisibleContacts=()=>{\r\n    const {contacts,filter} = this.state;\r\n\r\n    return contacts.filter(contact=>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n  };\r\n\r\n  removeContact=e=>{\r\n    console.log(e.target)\r\n    this.setState({\r\n        contacts: [...this.state.contacts.filter(({name})=> name !== e.target.dataset.type)]\r\n    });\r\n  };\r\n\r\n  updateContact = e=>{\r\n    this.setState(prevState=>{\r\n     return {\r\n       contacts: prevState.contacts.map(contact=>{\r\n         return contact.name === e.target.dataset.name ?\r\n         {...contact, update: !contact.update} : contact\r\n       })\r\n     }\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    const {filter,contacts} = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <div>\r\n        <ContactForm onAddContact = {this.addContact}/>\r\n        <h2>Contacts</h2>\r\n        {contacts.length>1 &&\r\n        <Filter value={filter} onChangeFilter = {this.changeFilter}/>}\r\n\r\n        {visibleContacts.length >0 && (\r\n          <ContactList contacts = {visibleContacts} onRemoveContact = {this.removeContact}\r\n          onUpdateContact = {this.updateContact}/>\r\n        )}\r\n\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\n\r\nimport ContactList from '../contactList/ContactList';\r\nimport Filter from '../filter/Filter';\r\nimport ContactForm from '../contactForm/ContactForm';\r\n\r\nconst { v4: uuidv4 } = require('uuid');\r\n\r\nconst ContactsTrackerHook=()=> {\r\n\r\n const[contacts,setContacts]=useState([{id: 'id-1', name: 'Rosie Simpson', number: '459-12-56', update: false},\r\n {id: 'id-2', name: 'Hermione Kline', number: '443-89-12',update: false},\r\n {id: 'id-3', name: 'Eden Clements', number: '645-17-79',update: false},\r\n {id: 'id-4', name: 'Annie Copeland', number: '227-91-26',update: false}]);\r\n\r\n  const [filter,setFilter]=useState(\"\");\r\n\r\n  const addContact=(name,number)=>{\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n      update: false\r\n    };\r\n\r\n    const namesArr = contacts.map(item=>item.name);\r\n\r\n    namesArr.find(name =>name.toLowerCase() === contact.name.toLowerCase()) ?\r\n      alert(`${name} is already in the list`) :\r\n\r\n      setContacts([...contacts, contact]);\r\n\r\n  };\r\n\r\n  const changeFilter=e=>{\r\n    setFilter(e.target.value)\r\n  };\r\n\r\n  const getVisibleContacts=()=>{\r\n    return contacts.filter(contact=>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n  };\r\n\r\n  const removeContact=e=>{\r\n    console.log(e.target);\r\n    setContacts([...contacts.filter(({name})=> name !== e.target.dataset.type)]);\r\n  };\r\n\r\n  const updateContact = e=>{\r\n    setContacts([...contacts.map(contact=> {\r\n    return  contact.name === e.target.dataset.name ?\r\n    {...contact, update: !contact.update} : contact\r\n    })\r\n    ])\r\n  };\r\n\r\n\r\n    return (\r\n      <div>\r\n        <ContactForm onAddContact = {addContact}/>\r\n        <h2>Contacts</h2>\r\n        {contacts.length>1 &&\r\n        <Filter value={filter} onChangeFilter = {changeFilter}/>}\r\n\r\n        {getVisibleContacts().length >0 && (\r\n          <ContactList contacts = {getVisibleContacts()} onRemoveContact = {removeContact}\r\n          onUpdateContact = {updateContact}/>\r\n        )}\r\n\r\n      </div>\r\n    )\r\n\r\n};\r\n\r\nexport default ContactsTrackerHook;","import React, {Component} from 'react';\nimport ReactDOM from 'react';\nimport ContactsTracker from './components/contactsTracker/ContactsTracker';\nimport ContactsTrackerHooks from './components/contactsTracker/ContactsTrackHook';\n\n\nconst App =()=>{\n\n    return(\n      <div className = \"container\">\n        <h1>Phonebook</h1>\n        {/* <ContactsTracker/> */}\n        <ContactsTrackerHooks/>\n      </div>\n    )\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1rOaU\",\"input\":\"ContactForm_input__36TrD\",\"formButton\":\"ContactForm_formButton__1AiCN\"};"],"sourceRoot":""}